@model PlacementManagementSystem.Models.Application
@{
	ViewData["Title"] = "Apply";
}

<div class="row">
	<div class="col-12 mb-3">
		<h2 class="mb-0">Apply to @ViewBag.Job?.Title</h2>
		<p class="text-muted">
			@ViewBag.CompanyName • @ViewBag.Job?.Type • @(ViewBag.Job?.Location ?? "Remote/NA")
			@if (ViewBag.Job?.MinimumCPI != null)
			{
				<span class="badge badge-info ml-2">Min CPI: @ViewBag.Job.MinimumCPI</span>
			}
		</p>
	</div>
	<div class="col-md-8">
		<form method="post" enctype="multipart/form-data">
			@Html.AntiForgeryToken()
			<div asp-validation-summary="All" class="text-danger"></div>

			<div class="form-row">
				<div class="form-group col-md-6">
					<label asp-for="ApplicantName">Full Name</label>
					<input asp-for="ApplicantName" class="form-control" />
					<span asp-validation-for="ApplicantName" class="text-danger"></span>
				</div>
				<div class="form-group col-md-6">
					<label asp-for="ApplicantEmail">Email</label>
					<input asp-for="ApplicantEmail" class="form-control" />
					<span asp-validation-for="ApplicantEmail" class="text-danger"></span>
				</div>
			</div>

			<div class="form-row">
				<div class="form-group col-md-6">
					<label asp-for="CollegeId">College ID</label>
					<input asp-for="CollegeId" class="form-control" />
					<span asp-validation-for="CollegeId" class="text-danger"></span>
				</div>
				<div class="form-group col-md-6">
					<label asp-for="Gender">Gender</label>
					<select asp-for="Gender" class="form-control">
						<option value="">Select</option>
						<option>Male</option>
						<option>Female</option>
					</select>
					<span asp-validation-for="Gender" class="text-danger"></span>
				</div>
			</div>

			<div class="form-row">
				<div class="form-group col-md-6">
					<label asp-for="LinkedInUrl">LinkedIn</label>
					<input asp-for="LinkedInUrl" class="form-control" placeholder="https://www.linkedin.com/in/..." />
					<span asp-validation-for="LinkedInUrl" class="text-danger"></span>
				</div>
				<div class="form-group col-md-6">
					<label asp-for="GithubUrl">GitHub</label>
					<input asp-for="GithubUrl" class="form-control" placeholder="https://github.com/username" />
					<span asp-validation-for="GithubUrl" class="text-danger"></span>
				</div>
			</div>

			<div class="form-group">
				<label asp-for="CoverLetter">Why should we hire you?</label>
				<textarea asp-for="CoverLetter" class="form-control" rows="5"></textarea>
				<span asp-validation-for="CoverLetter" class="text-danger"></span>
			</div>

			<div class="form-group">
				<label>Resume (PDF)</label>
				<input type="file" name="resumeFile" class="form-control-file" accept="application/pdf" />
			</div>

			<div class="form-group form-check mb-3">
				<input asp-for="TermsAccepted" class="form-check-input" type="checkbox" id="termsCheck" />
				<label class="form-check-label" for="termsCheck">I agree to the Terms & Conditions</label>
			</div>

			<button type="submit" class="btn btn-primary">Submit Application</button>
			<a asp-action="Jobs" class="btn btn-link">Cancel</a>
		</form>
	</div>
	@if (Model != null && Model.Id > 0 && Model.Status != PlacementManagementSystem.Models.ApplicationStatus.Rejected)
	{
		<div class="col-md-4">
			<div class="card">
				<div class="card-header">Company Announcements</div>
				<div class="card-body">
					@{
						var job = ViewBag.Job as PlacementManagementSystem.Models.JobPosting;
						var anns = job == null ? new List<PlacementManagementSystem.Models.Announcement>() : Context.RequestServices.GetService(typeof(PlacementManagementSystem.Data.ApplicationDbContext)) is PlacementManagementSystem.Data.ApplicationDbContext ctx ? ctx.Announcements.Where(a => a.JobPostingId == job.Id).OrderByDescending(a => a.CreatedAtUtc).Take(5).ToList() : new List<PlacementManagementSystem.Models.Announcement>();
					}
					@if (anns.Count == 0)
					{
						<p class="text-muted mb-0">No announcements yet.</p>
					}
					else
					{
						<ul class="list-unstyled mb-0">
							@foreach (var a in anns)
							{
								<li class="mb-3">
									<div class="d-flex justify-content-between align-items-center">
										<strong>@a.Title</strong>
										<small class="text-muted">@a.CreatedAtUtc.ToString("g")</small>
									</div>
									<div>@a.Message</div>
								</li>
							}
						</ul>
					}
				</div>
			</div>
		</div>
	}
</div>


